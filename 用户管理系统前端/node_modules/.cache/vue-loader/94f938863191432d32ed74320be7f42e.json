{"remainingRequest":"D:\\用户管理系统前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\用户管理系统前端\\src\\components\\UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\用户管理系统前端\\src\\components\\UserList.vue","mtime":1677603652826},{"path":"D:\\用户管理系统前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\用户管理系统前端\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\用户管理系统前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\用户管理系统前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdVc2VyTGlzdCcsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxpc3Q6IFtdLCAvLyDnlKjmiLfliJfooagNCiAgICAgIHRvdGFsOiAwLCAvLyDmgLvorrDlvZXmlbANCiAgICAgIHBhZ2U6IDEsIC8vIOmhteeggQ0KICAgICAgbGltaXQ6IDEwLCAvLyDmr4/pobXorrDlvZXmlbANCiAgICAgIHNlYXJjaE9iajoge30sIC8vIOafpeivouadoeS7tg0KICAgICAgbXVsdGlwbGVTZWxlY3Rpb246IFtdLC8vIOaJuemHj+WIoOmZpOmAieS4reeahOiusOW9leWIl+ihqA0KICAgICAgZm9ybTogew0KICAgICAgICB1c2VyTmFtZTogJycsDQogICAgICAgIGFnZTogJycsDQogICAgICAgIHNleDogJycsDQogICAgICAgIHBob25lTnVtOiAnJywNCiAgICAgICAgYWRkcmVzczogJycNCiAgICAgIH0sDQogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwNCiAgICAgIGZvcm1SdWxlczogew0KICAgICAgICANCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRVc2VyTGlzdCgpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyDojrflj5bnlKjmiLfliJfooajnmoTmlbDmja4NCiAgICBhc3luYyBnZXRVc2VyTGlzdCgpIHsNCiAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRodHRwLmdldCgnL2ZpbmRQYWdlLycrdGhpcy5wYWdlKycvJyt0aGlzLmxpbWl0KQ0KICAgICAgaWYgKHJlcy5zdGF0dXMgIT09IDApIHJldHVybiBjb25zb2xlLmxvZygn55So5oi35YiX6KGo5pWw5o2u6I635Y+W5aSx6LSl77yBJykNCiAgICAgIHRoaXMubGlzdCA9IHJlcy5kYXRhLnJlY29yZHMNCiAgICAgIHRoaXMudG90YWwgPSByZXMuZGF0YS50b3RhbA0KICAgICAgY29uc29sZS5sb2codGhpcy5saXN0KQ0KICAgIH0sDQogICAgLy8g55uR5ZCs5a+56K+d5qGG5YWz6Zet55qE5LqL5Lu2DQogICAgb25EaWFsb2dDbG9zZWQoKSB7DQogICAgICAvLyDmi7/liLAgRm9ybSDnu4Tku7bnmoTlvJXnlKjvvIzosIPnlKggcmVzZXRGaWVsZHMg5Ye95pWw77yM5Y2z5Y+v6YeN572u6KGo5Y2VDQogICAgICB0aGlzLiRyZWZzLm15YWRkRm9ybS5yZXNldEZpZWxkcygpDQogICAgfSwNCiAgICAvLyDnlKjmiLfngrnlh7vkuobmt7vliqDmjInpkq4NCiAgICBvbkFkZE5ld1VzZXIoKSB7DQogICAgICB0aGlzLiRyZWZzLm15YWRkRm9ybS52YWxpZGF0ZShhc3luYyB2YWxpZCA9PiB7DQogICAgICAgIGlmICghdmFsaWQpIHJldHVybg0KICAgICAgICAvLyDpnIDopoHmiafooYzmt7vliqDnmoTkuJrliqHlpITnkIYNCiAgICAgICAgY29uc29sZS5sb2codGhpcy5mb3JtLnVzZXJOYW1lKTsNCiAgICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAucG9zdCgnL2FkZFVzZXInLCB0aGlzLmZvcm0pDQogICAgICAgIGlmIChyZXMuc3RhdHVzICE9PSAwKSByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcign5re75Yqg55So5oi35aSx6LSl77yBJykNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmt7vliqDmiJDlip/vvIEnKQ0KICAgICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQ0KICAgICAgICB0aGlzLmdldFVzZXJMaXN0KCkNCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDngrnlh7vkuobliKDpmaTnmoTpk77mjqUNCiAgICBhc3luYyBvblJlbW92ZShpZCkgew0KICAgICAgLy8g6K+i6Zeu55So5oi35piv5ZCm5Yig6ZmkDQogICAgICBjb25zdCBjb25maXJtUmVzdWx0ID0gYXdhaXQgdGhpcy4kY29uZmlybSgn5q2k5pON5L2c5bCG5rC45LmF5Yig6Zmk6K+l55So5oi3LCDmmK/lkKbnu6fnu60/JywgJ+aPkOekuicsIHsNCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywNCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLA0KICAgICAgfSkuY2F0Y2goZXJyID0+IGVycikNCg0KICAgICAgLy8g5Yik5pat5piv5ZCm54K55Ye75LqG56Gu6K6k5oyJ6ZKuDQogICAgICBpZiAoY29uZmlybVJlc3VsdCAhPT0gJ2NvbmZpcm0nKSByZXR1cm4gdGhpcy4kbWVzc2FnZS5pbmZvKCflj5bmtojkuobliKDpmaTvvIEnKQ0KDQogICAgICAvLyDlj5Hotbfor7fmsYLvvIzliKDpmaTmjIflrpogaWQg55qE5pWw5o2uDQogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5kZWxldGUoJy9hcGkvdXNlcnMvJyArIGlkKQ0KICAgICAgaWYgKHJlcy5zdGF0dXMgIT09IDApIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfliKDpmaTlpLHotKXvvIEnKQ0KICAgICAgLy8g5o+Q56S65Yig6Zmk5oiQ5Yqf77yM5bm25Yi35paw5YiX6KGo5pWw5o2uDQogICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKn++8gScpDQogICAgICB0aGlzLmdldFVzZXJMaXN0KCkNCiAgICB9LA0KICB9LA0KfQ0K"},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 添加按钮 -->\r\n    <el-button type=\"primary\" @click=\"dialogVisible = true\">添加新用户</el-button>\r\n\r\n    <!-- 表格 -->\r\n    <el-table\r\n      :data=\"list\"\r\n      border\r\n      stripe>\r\n      <el-table-column type=\"selection\"/>\r\n      <el-table-column prop=\"userName\" label=\"名称\"  />\r\n      <el-table-column prop=\"age\" label=\"年龄\" />\r\n      <el-table-column prop=\"sex\" label=\"性别\"  />\r\n      <el-table-column prop=\"phoneNum\" label=\"联系电话\"  />\r\n      <el-table-column prop=\"address\" label=\"详细地址\" />\r\n      <el-table-column label=\"操作\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" size=\"mini\" @click=\"removeById(scope.row.id)\">删除</el-button>\r\n          <router-link :to=\"'/vod/teacher/edit/'+scope.row.id\">\r\n            <el-button type=\"text\" size=\"mini\">修改</el-button>\r\n          </router-link>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加用户的对话框 -->\r\n    <el-dialog title=\"添加新用户\" :visible.sync=\"dialogVisible\" width=\"50%\" @close=\"onDialogClosed\">\r\n      <!-- 添加用户的表单 -->\r\n      <el-form :model=\"form\" label-width=\"80px\" :rules=\"formRules\" ref=\"myaddForm\">\r\n        <!-- 采集用户的姓名 -->\r\n        <el-form-item label=\"姓名\" prop=\"userName\">\r\n          <el-input v-model=\"form.userName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\" prop=\"age\">\r\n          <el-input v-model.number=\"form.age\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" prop=\"sex\">\r\n          <el-input v-model=\"form.sex\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系电话\" prop=\"phoneNum\">\r\n          <el-input v-model=\"form.phoneNum\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"详细地址\" prop=\"address\">\r\n          <el-input v-model=\"form.address\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"onAddNewUser\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserList',\r\n  data() {\r\n    return {\r\n      list: [], // 用户列表\r\n      total: 0, // 总记录数\r\n      page: 1, // 页码\r\n      limit: 10, // 每页记录数\r\n      searchObj: {}, // 查询条件\r\n      multipleSelection: [],// 批量删除选中的记录列表\r\n      form: {\r\n        userName: '',\r\n        age: '',\r\n        sex: '',\r\n        phoneNum: '',\r\n        address: ''\r\n      },\r\n      dialogVisible: false,\r\n      formRules: {\r\n        \r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    // 获取用户列表的数据\r\n    async getUserList() {\r\n      const { data: res } = await this.$http.get('/findPage/'+this.page+'/'+this.limit)\r\n      if (res.status !== 0) return console.log('用户列表数据获取失败！')\r\n      this.list = res.data.records\r\n      this.total = res.data.total\r\n      console.log(this.list)\r\n    },\r\n    // 监听对话框关闭的事件\r\n    onDialogClosed() {\r\n      // 拿到 Form 组件的引用，调用 resetFields 函数，即可重置表单\r\n      this.$refs.myaddForm.resetFields()\r\n    },\r\n    // 用户点击了添加按钮\r\n    onAddNewUser() {\r\n      this.$refs.myaddForm.validate(async valid => {\r\n        if (!valid) return\r\n        // 需要执行添加的业务处理\r\n        console.log(this.form.userName);\r\n        const { data: res } = await this.$http.post('/addUser', this.form)\r\n        if (res.status !== 0) return this.$message.error('添加用户失败！')\r\n        this.$message.success('添加成功！')\r\n        this.dialogVisible = false\r\n        this.getUserList()\r\n      })\r\n    },\r\n    // 点击了删除的链接\r\n    async onRemove(id) {\r\n      // 询问用户是否删除\r\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).catch(err => err)\r\n\r\n      // 判断是否点击了确认按钮\r\n      if (confirmResult !== 'confirm') return this.$message.info('取消了删除！')\r\n\r\n      // 发起请求，删除指定 id 的数据\r\n      const { data: res } = await this.$http.delete('/api/users/' + id)\r\n      if (res.status !== 0) return this.$message.error('删除失败！')\r\n      // 提示删除成功，并刷新列表数据\r\n      this.$message.success('删除成功！')\r\n      this.getUserList()\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"]}]}