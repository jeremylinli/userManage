{"remainingRequest":"D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\babel-loader\\lib\\index.js!D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\src\\components\\UserList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\src\\components\\UserList.vue","mtime":1677599156899},{"path":"D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Files\\Java资料\\黑马程序员\\Vue\\黑马程序员Vue全套视频教程，从vue2.0到vue3.0一套全覆盖\\Vue3\\配套资料\\其他资料（不含视频）\\day 09\\代码\\code\\code-users\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 添加按钮 -->\r\n    <el-button type=\"primary\" @click=\"dialogVisible = true\">添加新用户</el-button>\r\n\r\n    <!-- 用户的表格 -->\r\n    <el-table :data=\"userList\" stripe border>\r\n      <!-- 这是索引列 -->\r\n      <el-table-column type=\"index\" label=\"#\"></el-table-column>\r\n      <!-- 渲染用户名这一列 -->\r\n      <el-table-column label=\"姓名\" prop=\"userName\"></el-table-column>\r\n      <el-table-column label=\"年龄\" prop=\"age\"></el-table-column>\r\n      <el-table-column label=\"性别\" prop=\"sex\"></el-table-column>\r\n      <el-table-column label=\"创建时间\">\r\n        <template #default=\"scope\">\r\n          {{ scope.row.addtime | dateFormat }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <!-- v-slot:default=\"scope\" -->\r\n        <!-- #default=\"scope\" -->\r\n        <!-- v-slot=\"scope\" -->\r\n        <template v-slot=\"{ row }\">\r\n          <div>\r\n            <router-link :to=\"'/users/' + row.id\">详情</router-link>&nbsp;\r\n            <a href=\"#\" @click.prevent=\"onRemove(row.id)\">删除</a>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加用户的对话框 -->\r\n    <el-dialog title=\"添加新用户\" :visible.sync=\"dialogVisible\" width=\"50%\" @close=\"onDialogClosed\">\r\n      <!-- 添加用户的表单 -->\r\n      <el-form :model=\"form\" label-width=\"80px\" :rules=\"formRules\" ref=\"myaddForm\">\r\n        <!-- 采集用户的姓名 -->\r\n        <el-form-item label=\"用户姓名\" prop=\"name\">\r\n          <el-input v-model=\"form.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户年龄\" prop=\"age\">\r\n          <el-input v-model.number=\"form.age\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"用户头衔\" prop=\"position\">\r\n          <el-input v-model=\"form.position\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"onAddNewUser\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserList',\r\n  data() {\r\n    // 声明校验年龄的函数\r\n    let checkAge = (rule, value, cb) => {\r\n      if (!Number.isInteger(value)) {\r\n        return cb(new Error('请填写整数！'))\r\n      }\r\n      if (value > 100 || value < 1) {\r\n        return cb(new Error('年龄必须在 1 到 100 之间！'))\r\n      }\r\n      cb()\r\n    }\r\n    return {\r\n      userList: [],\r\n      // 控制添加对话框的显示与隐藏\r\n      dialogVisible: false,\r\n      // 要采集的用户的信息对象\r\n      form: {\r\n        name: '',\r\n        age: '',\r\n        position: '',\r\n      },\r\n      // 表单的验证规则对象\r\n      formRules: {\r\n        name: [\r\n          { required: true, message: '姓名是必填项', trigger: 'blur' },\r\n          { min: 1, max: 15, message: '长度在 1 到 15 个字符', trigger: 'blur' },\r\n        ],\r\n        age: [\r\n          { required: true, message: '年龄是必填项', trigger: 'blur' },\r\n          { validator: checkAge, trigger: 'blur' },\r\n        ],\r\n        position: [\r\n          { required: true, message: '头衔是必填项', trigger: 'blur' },\r\n          { min: 1, max: 10, message: '长度在 1 到 10 个字符', trigger: 'blur' },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.getUserList()\r\n  },\r\n  methods: {\r\n    // 获取用户列表的数据\r\n    async getUserList() {\r\n      const { data: res } = await this.$http.get('/findAll')\r\n      if (res.status !== 0) return console.log('用户列表数据获取失败！')\r\n      this.userList = res.data\r\n      console.log(this.userList)\r\n    },\r\n    // 监听对话框关闭的事件\r\n    onDialogClosed() {\r\n      // 拿到 Form 组件的引用，调用 resetFields 函数，即可重置表单\r\n      this.$refs.myaddForm.resetFields()\r\n    },\r\n    // 用户点击了添加按钮\r\n    onAddNewUser() {\r\n      this.$refs.myaddForm.validate(async valid => {\r\n        if (!valid) return\r\n        // 需要执行添加的业务处理\r\n        const { data: res } = await this.$http.post('/api/users', this.form)\r\n        if (res.status !== 0) return this.$message.error('添加用户失败！')\r\n        this.$message.success('添加成功！')\r\n        this.dialogVisible = false\r\n        this.getUserList()\r\n      })\r\n    },\r\n    // 点击了删除的链接\r\n    async onRemove(id) {\r\n      // 询问用户是否删除\r\n      const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n      }).catch(err => err)\r\n\r\n      // 判断是否点击了确认按钮\r\n      if (confirmResult !== 'confirm') return this.$message.info('取消了删除！')\r\n\r\n      // 发起请求，删除指定 id 的数据\r\n      const { data: res } = await this.$http.delete('/api/users/' + id)\r\n      if (res.status !== 0) return this.$message.error('删除失败！')\r\n      // 提示删除成功，并刷新列表数据\r\n      this.$message.success('删除成功！')\r\n      this.getUserList()\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}